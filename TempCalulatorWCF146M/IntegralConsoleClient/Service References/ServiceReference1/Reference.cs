//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IntegralConsoleClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IntegralInput", Namespace="http://schemas.datacontract.org/2004/07/WcfMathLibrary.Integrals")]
    [System.SerializableAttribute()]
    public partial class IntegralInput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Func<double, double> IntegrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double A {
            get {
                return this.AField;
            }
            set {
                if ((this.AField.Equals(value) != true)) {
                    this.AField = value;
                    this.RaisePropertyChanged("A");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double B {
            get {
                return this.BField;
            }
            set {
                if ((this.BField.Equals(value) != true)) {
                    this.BField = value;
                    this.RaisePropertyChanged("B");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Func<double, double> Integrand {
            get {
                return this.IntegrandField;
            }
            set {
                if ((object.ReferenceEquals(this.IntegrandField, value) != true)) {
                    this.IntegrandField = value;
                    this.RaisePropertyChanged("Integrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int N {
            get {
                return this.NField;
            }
            set {
                if ((this.NField.Equals(value) != true)) {
                    this.NField = value;
                    this.RaisePropertyChanged("N");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IntegralOutput", Namespace="http://schemas.datacontract.org/2004/07/WcfMathLibrary.Integrals")]
    [System.SerializableAttribute()]
    public partial class IntegralOutput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double resultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double result {
            get {
                return this.resultField;
            }
            set {
                if ((this.resultField.Equals(value) != true)) {
                    this.resultField = value;
                    this.RaisePropertyChanged("result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IServiceIntegral", CallbackContract=typeof(IntegralConsoleClient.ServiceReference1.IServiceIntegralCallback))]
    public interface IServiceIntegral {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceIntegral/IntegralParTrapeze", ReplyAction="http://tempuri.org/IServiceIntegral/IntegralParTrapezeResponse")]
        IntegralConsoleClient.ServiceReference1.IntegralOutput IntegralParTrapeze(IntegralConsoleClient.ServiceReference1.IntegralInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceIntegral/IntegralParTrapeze", ReplyAction="http://tempuri.org/IServiceIntegral/IntegralParTrapezeResponse")]
        System.Threading.Tasks.Task<IntegralConsoleClient.ServiceReference1.IntegralOutput> IntegralParTrapezeAsync(IntegralConsoleClient.ServiceReference1.IntegralInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceIntegral/IntegralParRectangleMedium", ReplyAction="http://tempuri.org/IServiceIntegral/IntegralParRectangleMediumResponse")]
        IntegralConsoleClient.ServiceReference1.IntegralOutput IntegralParRectangleMedium(IntegralConsoleClient.ServiceReference1.IntegralInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceIntegral/IntegralParRectangleMedium", ReplyAction="http://tempuri.org/IServiceIntegral/IntegralParRectangleMediumResponse")]
        System.Threading.Tasks.Task<IntegralConsoleClient.ServiceReference1.IntegralOutput> IntegralParRectangleMediumAsync(IntegralConsoleClient.ServiceReference1.IntegralInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceIntegral/IntegralParSimpson", ReplyAction="http://tempuri.org/IServiceIntegral/IntegralParSimpsonResponse")]
        IntegralConsoleClient.ServiceReference1.IntegralOutput IntegralParSimpson(IntegralConsoleClient.ServiceReference1.IntegralInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceIntegral/IntegralParSimpson", ReplyAction="http://tempuri.org/IServiceIntegral/IntegralParSimpsonResponse")]
        System.Threading.Tasks.Task<IntegralConsoleClient.ServiceReference1.IntegralOutput> IntegralParSimpsonAsync(IntegralConsoleClient.ServiceReference1.IntegralInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceIntegral/IntegralSeqTrapeze", ReplyAction="http://tempuri.org/IServiceIntegral/IntegralSeqTrapezeResponse")]
        IntegralConsoleClient.ServiceReference1.IntegralOutput IntegralSeqTrapeze(IntegralConsoleClient.ServiceReference1.IntegralInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceIntegral/IntegralSeqTrapeze", ReplyAction="http://tempuri.org/IServiceIntegral/IntegralSeqTrapezeResponse")]
        System.Threading.Tasks.Task<IntegralConsoleClient.ServiceReference1.IntegralOutput> IntegralSeqTrapezeAsync(IntegralConsoleClient.ServiceReference1.IntegralInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceIntegral/IntegralSeqRectangleMedium", ReplyAction="http://tempuri.org/IServiceIntegral/IntegralSeqRectangleMediumResponse")]
        IntegralConsoleClient.ServiceReference1.IntegralOutput IntegralSeqRectangleMedium(IntegralConsoleClient.ServiceReference1.IntegralInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceIntegral/IntegralSeqRectangleMedium", ReplyAction="http://tempuri.org/IServiceIntegral/IntegralSeqRectangleMediumResponse")]
        System.Threading.Tasks.Task<IntegralConsoleClient.ServiceReference1.IntegralOutput> IntegralSeqRectangleMediumAsync(IntegralConsoleClient.ServiceReference1.IntegralInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceIntegral/IntegralSeqSimpson", ReplyAction="http://tempuri.org/IServiceIntegral/IntegralSeqSimpsonResponse")]
        IntegralConsoleClient.ServiceReference1.IntegralOutput IntegralSeqSimpson(IntegralConsoleClient.ServiceReference1.IntegralInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceIntegral/IntegralSeqSimpson", ReplyAction="http://tempuri.org/IServiceIntegral/IntegralSeqSimpsonResponse")]
        System.Threading.Tasks.Task<IntegralConsoleClient.ServiceReference1.IntegralOutput> IntegralSeqSimpsonAsync(IntegralConsoleClient.ServiceReference1.IntegralInput input);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceIntegralCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceIntegral/Integrand", ReplyAction="http://tempuri.org/IServiceIntegral/IntegrandResponse")]
        double Integrand(double x);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceIntegralChannel : IntegralConsoleClient.ServiceReference1.IServiceIntegral, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceIntegralClient : System.ServiceModel.DuplexClientBase<IntegralConsoleClient.ServiceReference1.IServiceIntegral>, IntegralConsoleClient.ServiceReference1.IServiceIntegral {
        
        public ServiceIntegralClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiceIntegralClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiceIntegralClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceIntegralClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceIntegralClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public IntegralConsoleClient.ServiceReference1.IntegralOutput IntegralParTrapeze(IntegralConsoleClient.ServiceReference1.IntegralInput input) {
            return base.Channel.IntegralParTrapeze(input);
        }
        
        public System.Threading.Tasks.Task<IntegralConsoleClient.ServiceReference1.IntegralOutput> IntegralParTrapezeAsync(IntegralConsoleClient.ServiceReference1.IntegralInput input) {
            return base.Channel.IntegralParTrapezeAsync(input);
        }
        
        public IntegralConsoleClient.ServiceReference1.IntegralOutput IntegralParRectangleMedium(IntegralConsoleClient.ServiceReference1.IntegralInput input) {
            return base.Channel.IntegralParRectangleMedium(input);
        }
        
        public System.Threading.Tasks.Task<IntegralConsoleClient.ServiceReference1.IntegralOutput> IntegralParRectangleMediumAsync(IntegralConsoleClient.ServiceReference1.IntegralInput input) {
            return base.Channel.IntegralParRectangleMediumAsync(input);
        }
        
        public IntegralConsoleClient.ServiceReference1.IntegralOutput IntegralParSimpson(IntegralConsoleClient.ServiceReference1.IntegralInput input) {
            return base.Channel.IntegralParSimpson(input);
        }
        
        public System.Threading.Tasks.Task<IntegralConsoleClient.ServiceReference1.IntegralOutput> IntegralParSimpsonAsync(IntegralConsoleClient.ServiceReference1.IntegralInput input) {
            return base.Channel.IntegralParSimpsonAsync(input);
        }
        
        public IntegralConsoleClient.ServiceReference1.IntegralOutput IntegralSeqTrapeze(IntegralConsoleClient.ServiceReference1.IntegralInput input) {
            return base.Channel.IntegralSeqTrapeze(input);
        }
        
        public System.Threading.Tasks.Task<IntegralConsoleClient.ServiceReference1.IntegralOutput> IntegralSeqTrapezeAsync(IntegralConsoleClient.ServiceReference1.IntegralInput input) {
            return base.Channel.IntegralSeqTrapezeAsync(input);
        }
        
        public IntegralConsoleClient.ServiceReference1.IntegralOutput IntegralSeqRectangleMedium(IntegralConsoleClient.ServiceReference1.IntegralInput input) {
            return base.Channel.IntegralSeqRectangleMedium(input);
        }
        
        public System.Threading.Tasks.Task<IntegralConsoleClient.ServiceReference1.IntegralOutput> IntegralSeqRectangleMediumAsync(IntegralConsoleClient.ServiceReference1.IntegralInput input) {
            return base.Channel.IntegralSeqRectangleMediumAsync(input);
        }
        
        public IntegralConsoleClient.ServiceReference1.IntegralOutput IntegralSeqSimpson(IntegralConsoleClient.ServiceReference1.IntegralInput input) {
            return base.Channel.IntegralSeqSimpson(input);
        }
        
        public System.Threading.Tasks.Task<IntegralConsoleClient.ServiceReference1.IntegralOutput> IntegralSeqSimpsonAsync(IntegralConsoleClient.ServiceReference1.IntegralInput input) {
            return base.Channel.IntegralSeqSimpsonAsync(input);
        }
    }
}
