//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18408
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleTestMatrix.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Array3DOfdouble", Namespace="http://schemas.datacontract.org/2004/07/Array3DLibrary")]
    [System.SerializableAttribute()]
    public partial class Array3DOfdouble : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double[] ItemsField;
        
        private int MaxItemNumberField;
        
        private int xLengthField;
        
        private int yLengthField;
        
        private int zLengthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int MaxItemNumber {
            get {
                return this.MaxItemNumberField;
            }
            set {
                if ((this.MaxItemNumberField.Equals(value) != true)) {
                    this.MaxItemNumberField = value;
                    this.RaisePropertyChanged("MaxItemNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int xLength {
            get {
                return this.xLengthField;
            }
            set {
                if ((this.xLengthField.Equals(value) != true)) {
                    this.xLengthField = value;
                    this.RaisePropertyChanged("xLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int yLength {
            get {
                return this.yLengthField;
            }
            set {
                if ((this.yLengthField.Equals(value) != true)) {
                    this.yLengthField = value;
                    this.RaisePropertyChanged("yLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int zLength {
            get {
                return this.zLengthField;
            }
            set {
                if ((this.zLengthField.Equals(value) != true)) {
                    this.zLengthField = value;
                    this.RaisePropertyChanged("zLength");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CalculateTemp", ReplyAction="http://tempuri.org/IService1/CalculateTempResponse")]
        WcfMathLibrary.OutputForTemp CalculateTemp(WcfMathLibrary.InputForTemp input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CalculateTemp", ReplyAction="http://tempuri.org/IService1/CalculateTempResponse")]
        System.Threading.Tasks.Task<WcfMathLibrary.OutputForTemp> CalculateTempAsync(WcfMathLibrary.InputForTemp input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CalculateTemp3D", ReplyAction="http://tempuri.org/IService1/CalculateTemp3DResponse")]
        WcfMathLibrary.OutputForTemp3D CalculateTemp3D(WcfMathLibrary.InputForTemp3D input3D);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CalculateTemp3D", ReplyAction="http://tempuri.org/IService1/CalculateTemp3DResponse")]
        System.Threading.Tasks.Task<WcfMathLibrary.OutputForTemp3D> CalculateTemp3DAsync(WcfMathLibrary.InputForTemp3D input3D);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CalculateTemp1D", ReplyAction="http://tempuri.org/IService1/CalculateTemp1DResponse")]
        WcfMathLibrary.OutputForTemp1D CalculateTemp1D(WcfMathLibrary.InputForTemp1D input1D);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CalculateTemp1D", ReplyAction="http://tempuri.org/IService1/CalculateTemp1DResponse")]
        System.Threading.Tasks.Task<WcfMathLibrary.OutputForTemp1D> CalculateTemp1DAsync(WcfMathLibrary.InputForTemp1D input1D);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MatrixSum", ReplyAction="http://tempuri.org/IService1/MatrixSumResponse")]
        WcfMathLibrary.MatrixOutput MatrixSum(WcfMathLibrary.MatrixInput Input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MatrixSum", ReplyAction="http://tempuri.org/IService1/MatrixSumResponse")]
        System.Threading.Tasks.Task<WcfMathLibrary.MatrixOutput> MatrixSumAsync(WcfMathLibrary.MatrixInput Input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MatrixMul", ReplyAction="http://tempuri.org/IService1/MatrixMulResponse")]
        WcfMathLibrary.MatrixOutput MatrixMul(WcfMathLibrary.MatrixInput Input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MatrixMul", ReplyAction="http://tempuri.org/IService1/MatrixMulResponse")]
        System.Threading.Tasks.Task<WcfMathLibrary.MatrixOutput> MatrixMulAsync(WcfMathLibrary.MatrixInput Input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IntegralParTrapeze", ReplyAction="http://tempuri.org/IService1/IntegralParTrapezeResponse")]
        WcfMathLibrary.IntegralOutput IntegralParTrapeze(WcfMathLibrary.IntegralInput Input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IntegralParTrapeze", ReplyAction="http://tempuri.org/IService1/IntegralParTrapezeResponse")]
        System.Threading.Tasks.Task<WcfMathLibrary.IntegralOutput> IntegralParTrapezeAsync(WcfMathLibrary.IntegralInput Input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IntegralParRectangleMedium", ReplyAction="http://tempuri.org/IService1/IntegralParRectangleMediumResponse")]
        WcfMathLibrary.IntegralOutput IntegralParRectangleMedium(WcfMathLibrary.IntegralInput Input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IntegralParRectangleMedium", ReplyAction="http://tempuri.org/IService1/IntegralParRectangleMediumResponse")]
        System.Threading.Tasks.Task<WcfMathLibrary.IntegralOutput> IntegralParRectangleMediumAsync(WcfMathLibrary.IntegralInput Input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IntegralParSimpson", ReplyAction="http://tempuri.org/IService1/IntegralParSimpsonResponse")]
        WcfMathLibrary.IntegralOutput IntegralParSimpson(WcfMathLibrary.IntegralInput Input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IntegralParSimpson", ReplyAction="http://tempuri.org/IService1/IntegralParSimpsonResponse")]
        System.Threading.Tasks.Task<WcfMathLibrary.IntegralOutput> IntegralParSimpsonAsync(WcfMathLibrary.IntegralInput Input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IntegralSeqTrapeze", ReplyAction="http://tempuri.org/IService1/IntegralSeqTrapezeResponse")]
        WcfMathLibrary.IntegralOutput IntegralSeqTrapeze(WcfMathLibrary.IntegralInput Input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IntegralSeqTrapeze", ReplyAction="http://tempuri.org/IService1/IntegralSeqTrapezeResponse")]
        System.Threading.Tasks.Task<WcfMathLibrary.IntegralOutput> IntegralSeqTrapezeAsync(WcfMathLibrary.IntegralInput Input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IntegralSeqRectangleMedium", ReplyAction="http://tempuri.org/IService1/IntegralSeqRectangleMediumResponse")]
        WcfMathLibrary.IntegralOutput IntegralSeqRectangleMedium(WcfMathLibrary.IntegralInput Input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IntegralSeqRectangleMedium", ReplyAction="http://tempuri.org/IService1/IntegralSeqRectangleMediumResponse")]
        System.Threading.Tasks.Task<WcfMathLibrary.IntegralOutput> IntegralSeqRectangleMediumAsync(WcfMathLibrary.IntegralInput Input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IntegralSeqSimpson", ReplyAction="http://tempuri.org/IService1/IntegralSeqSimpsonResponse")]
        WcfMathLibrary.IntegralOutput IntegralSeqSimpson(WcfMathLibrary.IntegralInput Input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IntegralSeqSimpson", ReplyAction="http://tempuri.org/IService1/IntegralSeqSimpsonResponse")]
        System.Threading.Tasks.Task<WcfMathLibrary.IntegralOutput> IntegralSeqSimpsonAsync(WcfMathLibrary.IntegralInput Input);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ConsoleTestMatrix.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ConsoleTestMatrix.ServiceReference1.IService1>, ConsoleTestMatrix.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WcfMathLibrary.OutputForTemp CalculateTemp(WcfMathLibrary.InputForTemp input) {
            return base.Channel.CalculateTemp(input);
        }
        
        public System.Threading.Tasks.Task<WcfMathLibrary.OutputForTemp> CalculateTempAsync(WcfMathLibrary.InputForTemp input) {
            return base.Channel.CalculateTempAsync(input);
        }
        
        public WcfMathLibrary.OutputForTemp3D CalculateTemp3D(WcfMathLibrary.InputForTemp3D input3D) {
            return base.Channel.CalculateTemp3D(input3D);
        }
        
        public System.Threading.Tasks.Task<WcfMathLibrary.OutputForTemp3D> CalculateTemp3DAsync(WcfMathLibrary.InputForTemp3D input3D) {
            return base.Channel.CalculateTemp3DAsync(input3D);
        }
        
        public WcfMathLibrary.OutputForTemp1D CalculateTemp1D(WcfMathLibrary.InputForTemp1D input1D) {
            return base.Channel.CalculateTemp1D(input1D);
        }
        
        public System.Threading.Tasks.Task<WcfMathLibrary.OutputForTemp1D> CalculateTemp1DAsync(WcfMathLibrary.InputForTemp1D input1D) {
            return base.Channel.CalculateTemp1DAsync(input1D);
        }
        
        public WcfMathLibrary.MatrixOutput MatrixSum(WcfMathLibrary.MatrixInput Input) {
            return base.Channel.MatrixSum(Input);
        }
        
        public System.Threading.Tasks.Task<WcfMathLibrary.MatrixOutput> MatrixSumAsync(WcfMathLibrary.MatrixInput Input) {
            return base.Channel.MatrixSumAsync(Input);
        }
        
        public WcfMathLibrary.MatrixOutput MatrixMul(WcfMathLibrary.MatrixInput Input) {
            return base.Channel.MatrixMul(Input);
        }
        
        public System.Threading.Tasks.Task<WcfMathLibrary.MatrixOutput> MatrixMulAsync(WcfMathLibrary.MatrixInput Input) {
            return base.Channel.MatrixMulAsync(Input);
        }
        
        public WcfMathLibrary.IntegralOutput IntegralParTrapeze(WcfMathLibrary.IntegralInput Input) {
            return base.Channel.IntegralParTrapeze(Input);
        }
        
        public System.Threading.Tasks.Task<WcfMathLibrary.IntegralOutput> IntegralParTrapezeAsync(WcfMathLibrary.IntegralInput Input) {
            return base.Channel.IntegralParTrapezeAsync(Input);
        }
        
        public WcfMathLibrary.IntegralOutput IntegralParRectangleMedium(WcfMathLibrary.IntegralInput Input) {
            return base.Channel.IntegralParRectangleMedium(Input);
        }
        
        public System.Threading.Tasks.Task<WcfMathLibrary.IntegralOutput> IntegralParRectangleMediumAsync(WcfMathLibrary.IntegralInput Input) {
            return base.Channel.IntegralParRectangleMediumAsync(Input);
        }
        
        public WcfMathLibrary.IntegralOutput IntegralParSimpson(WcfMathLibrary.IntegralInput Input) {
            return base.Channel.IntegralParSimpson(Input);
        }
        
        public System.Threading.Tasks.Task<WcfMathLibrary.IntegralOutput> IntegralParSimpsonAsync(WcfMathLibrary.IntegralInput Input) {
            return base.Channel.IntegralParSimpsonAsync(Input);
        }
        
        public WcfMathLibrary.IntegralOutput IntegralSeqTrapeze(WcfMathLibrary.IntegralInput Input) {
            return base.Channel.IntegralSeqTrapeze(Input);
        }
        
        public System.Threading.Tasks.Task<WcfMathLibrary.IntegralOutput> IntegralSeqTrapezeAsync(WcfMathLibrary.IntegralInput Input) {
            return base.Channel.IntegralSeqTrapezeAsync(Input);
        }
        
        public WcfMathLibrary.IntegralOutput IntegralSeqRectangleMedium(WcfMathLibrary.IntegralInput Input) {
            return base.Channel.IntegralSeqRectangleMedium(Input);
        }
        
        public System.Threading.Tasks.Task<WcfMathLibrary.IntegralOutput> IntegralSeqRectangleMediumAsync(WcfMathLibrary.IntegralInput Input) {
            return base.Channel.IntegralSeqRectangleMediumAsync(Input);
        }
        
        public WcfMathLibrary.IntegralOutput IntegralSeqSimpson(WcfMathLibrary.IntegralInput Input) {
            return base.Channel.IntegralSeqSimpson(Input);
        }
        
        public System.Threading.Tasks.Task<WcfMathLibrary.IntegralOutput> IntegralSeqSimpsonAsync(WcfMathLibrary.IntegralInput Input) {
            return base.Channel.IntegralSeqSimpsonAsync(Input);
        }
    }
}
